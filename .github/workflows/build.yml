name: build

on:
  push:
    branches:
      - "**"

jobs:

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ["pulumi", "server"]
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm run lint

  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ["pulumi", "server"]
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm run test:unit

  e2e-test:
    runs-on: ubuntu-latest
    needs: [unit-test]
    steps:
      - uses: actions/checkout@v3
      - name: start server
        run: |
          npm ci
          npm run build
          npm start &
        working-directory: server
      - uses: cypress-io/github-action@v4
        with:
          working-directory: e2e
          wait-on: 'http://localhost:3000'
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  build:
    runs-on: ubuntu-latest
    needs: [lint, e2e-test]
    if: github.ref == 'refs/heads/develop'
    defaults:
      run:
        working-directory: server
    outputs:
      version: ${{ steps.release.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_MINION_PAT }}
      - name: Build
        run: TAG=latest ./build.sh
      - run: npm ci
      - name: Release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.CI_MINION_PAT }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: npx semantic-release

  deploy-staging:
    environment: Staging
    needs: build
    if: ${{ needs.build.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
        working-directory: ./pulumi
      - run: npm install -g pulumi
      - uses: pulumi/actions@v3
        with:
          command: up
          stack-name: staging
          work-dir: pulumi
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
          TAG: ${{ needs.build.outputs.version }}


  deploy-production:
    environment: Production
    needs: [build, deploy-staging]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
        working-directory: ./pulumi
      - run: npm install -g pulumi
      - uses: pulumi/actions@v3
        with:
          command: up
          stack-name: production
          work-dir: pulumi
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
          TAG: ${{ needs.build.outputs.version }}
